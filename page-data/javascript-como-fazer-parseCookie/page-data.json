{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript-como-fazer-parseCookie/","result":{"data":{"site":{"siteMetadata":{"title":"JS para impacientes"}},"markdownRemark":{"id":"a8cd970f-11e4-5b99-9a29-a0ea5505bcb7","excerpt":"Parse an HTTP Cookie header string and return an object of all cookie name-value pairs. Use  to separate key-value pairs from each other.\nUse  and  to separate…","html":"<p>Parse an HTTP Cookie header string and return an object of all cookie name-value pairs.</p>\n<p>Use <code class=\"language-text\">String.prototype.split(&#39;;&#39;)</code> to separate key-value pairs from each other.\nUse <code class=\"language-text\">Array.prototype.map()</code> and <code class=\"language-text\">String.prototype.split(&#39;=&#39;)</code> to separate keys from values in each pair.\nUse <code class=\"language-text\">Array.prototype.reduce()</code> and <code class=\"language-text\">decodeURIComponent()</code> to create an object with all key-value pairs.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">parseCookie</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">str</span> <span class=\"token operator\">=></span>\n  str\n    <span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">';'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> v<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'='</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      acc<span class=\"token punctuation\">[</span><span class=\"token function\">decodeURIComponent</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">decodeURIComponent</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> acc<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token function\">parseCookie</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo=bar; equation=E%3Dmc%5E2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { foo: 'bar', equation: 'E=mc^2' }</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p><a href=\"http://github.com/30-seconds/\">Acesse a Referência original</a></p>","frontmatter":{"title":"como usar o parseCookie no javascript es6","date":"January 04, 2020","description":""}}},"pageContext":{"slug":"/javascript-como-fazer-parseCookie/","previous":{"fields":{"slug":"/javascript-como-fazer-partialRight/"},"frontmatter":{"title":"como usar o partialRight no javascript es6"}},"next":{"fields":{"slug":"/javascript-como-fazer-palindrome/"},"frontmatter":{"title":"como usar o palindrome no javascript es6"}}}},"staticQueryHashes":["1061827086","63159454"]}