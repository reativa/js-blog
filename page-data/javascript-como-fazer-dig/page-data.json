{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript-como-fazer-dig/","result":{"data":{"site":{"siteMetadata":{"title":"JS para impacientes"}},"markdownRemark":{"id":"9da96bc6-a669-58a0-a626-e05e93553f05","excerpt":"Returns the target value in a nested JSON object, based on the given key. Use the  operator to check if  exists in .\nIf found, return the value of , otherwise…","html":"<p>Returns the target value in a nested JSON object, based on the given key.</p>\n<p>Use the <code class=\"language-text\">in</code> operator to check if <code class=\"language-text\">target</code> exists in <code class=\"language-text\">obj</code>.\nIf found, return the value of <code class=\"language-text\">obj[target]</code>, otherwise use <code class=\"language-text\">Object.values(obj)</code> and <code class=\"language-text\">Array.prototype.reduce()</code> to recursively call <code class=\"language-text\">dig</code> on each nested object until the first matching key/value pair is found.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">dig</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span> target</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  target <span class=\"token keyword\">in</span> obj\n    <span class=\"token operator\">?</span> obj<span class=\"token punctuation\">[</span>target<span class=\"token punctuation\">]</span>\n    <span class=\"token operator\">:</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> val</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>acc <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> acc<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> val <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">dig</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  level1<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    level2<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      level3<span class=\"token operator\">:</span> <span class=\"token string\">'some data'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">dig</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token string\">'level3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'some data'</span>\n<span class=\"token function\">dig</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token string\">'level4'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><a href=\"http://github.com/30-seconds/\">Acesse a Referência original</a></p>","frontmatter":{"title":"como usar o dig no javascript es6","date":"January 04, 2020","description":""}}},"pageContext":{"slug":"/javascript-como-fazer-dig/","previous":{"fields":{"slug":"/javascript-como-fazer-drop/"},"frontmatter":{"title":"como usar o drop no javascript es6"}},"next":{"fields":{"slug":"/javascript-como-fazer-digitize/"},"frontmatter":{"title":"como usar o digitize no javascript es6"}}}},"staticQueryHashes":["1061827086","63159454"]}