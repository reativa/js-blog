{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript-como-fazer-bifurcateBy/","result":{"data":{"site":{"siteMetadata":{"title":"JS para impacientes"}},"markdownRemark":{"id":"6c94a156-d132-50a9-b0c1-57406318e08e","excerpt":"Splits values into two groups according to a predicate function, which specifies which group an element in the input collection belongs to. If the predicate…","html":"<p>Splits values into two groups according to a predicate function, which specifies which group an element in the input collection belongs to. If the predicate function returns a truthy value, the collection element belongs to the first group; otherwise, it belongs to the second group.</p>\n<p>Use <code class=\"language-text\">Array.prototype.reduce()</code> and <code class=\"language-text\">Array.prototype.push()</code> to add elements to groups, based on the value returned by <code class=\"language-text\">fn</code> for each element.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">bifurcateBy</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">arr<span class=\"token punctuation\">,</span> fn</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  arr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>acc<span class=\"token punctuation\">[</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> acc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token function\">bifurcateBy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'beep'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'boop'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ ['beep', 'boop', 'bar'], ['foo'] ]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p><a href=\"http://github.com/30-seconds/\">Acesse a Referência original</a></p>","frontmatter":{"title":"como usar o bifurcateBy no javascript es6","date":"January 04, 2020","description":""}}},"pageContext":{"slug":"/javascript-como-fazer-bifurcateBy/","previous":{"fields":{"slug":"/javascript-como-fazer-bind/"},"frontmatter":{"title":"como usar o bind no javascript es6"}},"next":{"fields":{"slug":"/javascript-como-fazer-bifurcate/"},"frontmatter":{"title":"como usar o bifurcate no javascript es6"}}}},"staticQueryHashes":["1061827086","63159454"]}