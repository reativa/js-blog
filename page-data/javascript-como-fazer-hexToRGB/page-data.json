{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript-como-fazer-hexToRGB/","result":{"data":{"site":{"siteMetadata":{"title":"JS para impacientes"}},"markdownRemark":{"id":"d1e93d06-b134-5158-aae3-f866ad30d334","excerpt":"Converts a color code to a  or  string if alpha value is provided. Use bitwise right-shift operator and mask bits with  (and) operator to convert a hexadecimal…","html":"<p>Converts a color code to a <code class=\"language-text\">rgb()</code> or <code class=\"language-text\">rgba()</code> string if alpha value is provided.</p>\n<p>Use bitwise right-shift operator and mask bits with <code class=\"language-text\">&amp;</code> (and) operator to convert a hexadecimal color code (with or without prefixed with <code class=\"language-text\">#</code>) to a string with the RGB values. If it’s 3-digit color code, first convert to 6-digit version. If an alpha value is provided alongside 6-digit hex, give <code class=\"language-text\">rgba()</code> string in return.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">hexToRGB</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">hex</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> alpha <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    h <span class=\"token operator\">=</span> hex<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>hex<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> h <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>h<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">+</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> alpha <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  h <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'rgb'</span> <span class=\"token operator\">+</span>\n    <span class=\"token punctuation\">(</span>alpha <span class=\"token operator\">?</span> <span class=\"token string\">'a'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\n    <span class=\"token string\">'('</span> <span class=\"token operator\">+</span>\n    <span class=\"token punctuation\">(</span>h <span class=\"token operator\">>>></span> <span class=\"token punctuation\">(</span>alpha <span class=\"token operator\">?</span> <span class=\"token number\">24</span> <span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\n    <span class=\"token string\">', '</span> <span class=\"token operator\">+</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>h <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>alpha <span class=\"token operator\">?</span> <span class=\"token number\">0x00ff0000</span> <span class=\"token operator\">:</span> <span class=\"token number\">0x00ff00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token punctuation\">(</span>alpha <span class=\"token operator\">?</span> <span class=\"token number\">16</span> <span class=\"token operator\">:</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\n    <span class=\"token string\">', '</span> <span class=\"token operator\">+</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>h <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>alpha <span class=\"token operator\">?</span> <span class=\"token number\">0x0000ff00</span> <span class=\"token operator\">:</span> <span class=\"token number\">0x0000ff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token punctuation\">(</span>alpha <span class=\"token operator\">?</span> <span class=\"token number\">8</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\n    <span class=\"token punctuation\">(</span>alpha <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>h <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x000000ff</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\n    <span class=\"token string\">')'</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token function\">hexToRGB</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#27ae60ff'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'rgba(39, 174, 96, 255)'</span>\n<span class=\"token function\">hexToRGB</span><span class=\"token punctuation\">(</span><span class=\"token string\">'27ae60'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'rgb(39, 174, 96)'</span>\n<span class=\"token function\">hexToRGB</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#fff'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'rgb(255, 255, 255)'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p><a href=\"http://github.com/30-seconds/\">Acesse a Referência original</a></p>","frontmatter":{"title":"como usar o hexToRGB no javascript es6","date":"January 04, 2020","description":""}}},"pageContext":{"slug":"/javascript-como-fazer-hexToRGB/","previous":{"fields":{"slug":"/javascript-como-fazer-httpsRedirect/"},"frontmatter":{"title":"como usar o httpsRedirect no javascript es6"}},"next":{"fields":{"slug":"/javascript-como-fazer-httpGet/"},"frontmatter":{"title":"como usar o httpGet no javascript es6"}}}},"staticQueryHashes":["1061827086","63159454"]}