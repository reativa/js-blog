{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript-como-fazer-flattenObject/","result":{"data":{"site":{"siteMetadata":{"title":"JS para impacientes"}},"markdownRemark":{"id":"614dc8e0-ddda-5618-b2db-35b764187956","excerpt":"Flatten an object with the paths for keys. Use recursion.\nUse  combined with  to convert every leaf node to a flattened path node.\nIf the value of a key is an…","html":"<p>Flatten an object with the paths for keys.</p>\n<p>Use recursion.\nUse <code class=\"language-text\">Object.keys(obj)</code> combined with <code class=\"language-text\">Array.prototype.reduce()</code> to convert every leaf node to a flattened path node.\nIf the value of a key is an object, the function calls itself with the appropriate <code class=\"language-text\">prefix</code> to create the path using <code class=\"language-text\">Object.assign()</code>.\nOtherwise, it adds the appropriate prefixed key-value pair to the accumulator object.\nYou should always omit the second argument, <code class=\"language-text\">prefix</code>, unless you want every key to have a prefix.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> flattenObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> prefix <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> k</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> pre <span class=\"token operator\">=</span> prefix<span class=\"token punctuation\">.</span>length <span class=\"token operator\">?</span> prefix <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> obj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">)</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>acc<span class=\"token punctuation\">,</span> <span class=\"token function\">flattenObject</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> pre <span class=\"token operator\">+</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span> acc<span class=\"token punctuation\">[</span>pre <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> acc<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token function\">flattenObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> b<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> c<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> d<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { 'a.b.c': 1, d: 1 }</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p><a href=\"http://github.com/30-seconds/\">Acesse a Referência original</a></p>","frontmatter":{"title":"como usar o flattenObject no javascript es6","date":"January 04, 2020","description":""}}},"pageContext":{"slug":"/javascript-como-fazer-flattenObject/","previous":{"fields":{"slug":"/javascript-como-fazer-forEachRight/"},"frontmatter":{"title":"como usar o forEachRight no javascript es6"}},"next":{"fields":{"slug":"/javascript-como-fazer-flatten/"},"frontmatter":{"title":"como usar o flatten no javascript es6"}}}},"staticQueryHashes":["1061827086","63159454"]}