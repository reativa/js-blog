{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript-como-fazer-deepClone/","result":{"data":{"site":{"siteMetadata":{"title":"JS para impacientes"}},"markdownRemark":{"id":"f47f95c7-5214-5826-b7f6-991ed93ebf9b","excerpt":"Creates a deep clone of an object. Use recursion.\nCheck if the passed object is  and, if so, return .\nUse  and an empty object () to create a shallow clone of…","html":"<p>Creates a deep clone of an object.</p>\n<p>Use recursion.\nCheck if the passed object is <code class=\"language-text\">null</code> and, if so, return <code class=\"language-text\">null</code>.\nUse <code class=\"language-text\">Object.assign()</code> and an empty object (<code class=\"language-text\">{}</code>) to create a shallow clone of the original.\nUse <code class=\"language-text\">Object.keys()</code> and <code class=\"language-text\">Array.prototype.forEach()</code> to determine which key-value pairs need to be deep cloned.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">deepClone</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">obj</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> clone <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>clone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>\n    <span class=\"token parameter\">key</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>clone<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span> obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">?</span> <span class=\"token function\">deepClone</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> obj<span class=\"token punctuation\">.</span>length\n    <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>clone<span class=\"token punctuation\">.</span>length <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>clone<span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">:</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">?</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">:</span> clone<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> foo<span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span> obj<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token function\">deepClone</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// a !== b, a.obj !== b.obj</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p><a href=\"http://github.com/30-seconds/\">Acesse a Referência original</a></p>","frontmatter":{"title":"como usar o deepClone no javascript es6","date":"January 04, 2020","description":""}}},"pageContext":{"slug":"/javascript-como-fazer-deepClone/","previous":{"fields":{"slug":"/javascript-como-fazer-deepFlatten/"},"frontmatter":{"title":"como usar o deepFlatten no javascript es6"}},"next":{"fields":{"slug":"/javascript-como-fazer-decapitalize/"},"frontmatter":{"title":"como usar o decapitalize no javascript es6"}}}},"staticQueryHashes":["1061827086","63159454"]}