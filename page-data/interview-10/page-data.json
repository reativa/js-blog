{"componentChunkName":"component---src-templates-blog-post-js","path":"/interview-10/","result":{"data":{"site":{"siteMetadata":{"title":"JS para impacientes"}},"markdownRemark":{"id":"1de65dbd-7622-5413-b91a-0e97ce0f9f8b","excerpt":"https://www.instagram.com/tv/B9mke7fFuWY/ Suponha que temos um exemplo abaixo. JavaScript compara objetos e primitivos de maneira diferente.  Nas primitivas, as…","html":"<p><a href=\"https://www.instagram.com/tv/B9mke7fFuWY/\">https://www.instagram.com/tv/B9mke7fFuWY/</a></p>\n<p>Suponha que temos um exemplo abaixo.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> c <span class=\"token operator\">=</span> a\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">===</span> b<span class=\"token punctuation\">)</span> <span class=\"token comment\">// logga false mesmo que tenha a mesma propriedade</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">===</span> c<span class=\"token punctuation\">)</span> <span class=\"token comment\">// logga true hmmmmmmm</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>JavaScript</strong> compara <em>objetos</em> e <em>primitivos</em> de maneira diferente. </p>\n<p>Nas <em>primitivas</em>, as compara por <strong>valor</strong> enquanto nos <em>objetos</em> por <strong>referência</strong> ou pelo <strong>endereço na memória em que a variável está armazenada</strong>.</p>\n<p>É por isso que o primeiro <code class=\"language-text\">log</code> retorna <code class=\"language-text\">false</code> e o segundo <code class=\"language-text\">log</code> retorna <code class=\"language-text\">true</code>. <code class=\"language-text\">a</code> e <code class=\"language-text\">c</code>tem a mesma referência e <code class=\"language-text\">a</code> e <code class=\"language-text\">b</code> não.</p>\n<p>Por isso se você quiser comparar objetos use o stringify por exemplo: </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">jsonEqual</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">object1<span class=\"token punctuation\">,</span> object2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>object1<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>object2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">jsonEqual</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Baseado no excelente artigo: <a href=\"https://dev.to/macmacky/70-javascript-interview-questions-5gfi#14-whats-the-difference-between-and-\">70 Interview Questions</a></p>","frontmatter":{"title":"10: Por que ao comparar dois objetos semelhantes ele retorna falso em JavaScript?","date":"February 10, 2020","description":"#PerguntasDeEntrevistas 10"}}},"pageContext":{"slug":"/interview-10/","previous":{"fields":{"slug":"/interview-9/"},"frontmatter":{"title":"9: Qual a diferença entre == e ===?"}},"next":{"fields":{"slug":"/interview-11/"},"frontmatter":{"title":"11: O que o !! faz?"}}}},"staticQueryHashes":["1061827086","63159454"]}