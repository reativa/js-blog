{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript-como-fazer-prettyBytes/","result":{"data":{"site":{"siteMetadata":{"title":"JS para impacientes"}},"markdownRemark":{"id":"974669d3-4504-5a30-9b41-1f4a6af36afc","excerpt":"Converts a number in bytes to a human-readable string. Use an array dictionary of units to be accessed based on the exponent.\nUse  to truncate the number to a…","html":"<p>Converts a number in bytes to a human-readable string.</p>\n<p>Use an array dictionary of units to be accessed based on the exponent.\nUse <code class=\"language-text\">Number.toPrecision()</code> to truncate the number to a certain number of digits.\nReturn the prettified string by building it up, taking into account the supplied options and whether it is negative or not.\nOmit the second argument, <code class=\"language-text\">precision</code>, to use a default precision of <code class=\"language-text\">3</code> digits.\nOmit the third argument, <code class=\"language-text\">addSpace</code>, to add space between the number and unit by default.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">prettyBytes</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">num<span class=\"token punctuation\">,</span> precision <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> addSpace <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token constant\">UNITS</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'KB'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'MB'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'GB'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'TB'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'PB'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'EB'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ZB'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'YB'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> num <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>addSpace <span class=\"token operator\">?</span> <span class=\"token string\">' '</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token constant\">UNITS</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> exponent <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">log10</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token operator\">-</span>num <span class=\"token operator\">:</span> num<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">UNITS</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> n <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token operator\">-</span>num <span class=\"token operator\">:</span> num<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000</span> <span class=\"token operator\">**</span> exponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toPrecision</span><span class=\"token punctuation\">(</span>precision<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token string\">'-'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> n <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>addSpace <span class=\"token operator\">?</span> <span class=\"token string\">' '</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token constant\">UNITS</span><span class=\"token punctuation\">[</span>exponent<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token function\">prettyBytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"1 KB\"</span>\n<span class=\"token function\">prettyBytes</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">27145424323.5821</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"-27.145 GB\"</span>\n<span class=\"token function\">prettyBytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">123456789</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"123MB\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p><a href=\"http://github.com/30-seconds/\">Acesse a Referência original</a></p>","frontmatter":{"title":"como usar o prettyBytes no javascript es6","date":"January 04, 2020","description":""}}},"pageContext":{"slug":"/javascript-como-fazer-prettyBytes/","previous":{"fields":{"slug":"/javascript-como-fazer-pullAtIndex/"},"frontmatter":{"title":"como usar o pullAtIndex no javascript es6"}},"next":{"fields":{"slug":"/javascript-como-fazer-primes/"},"frontmatter":{"title":"como usar o primes no javascript es6"}}}},"staticQueryHashes":["1061827086","63159454"]}