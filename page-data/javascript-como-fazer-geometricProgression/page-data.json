{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript-como-fazer-geometricProgression/","result":{"data":{"site":{"siteMetadata":{"title":"JS para impacientes"}},"markdownRemark":{"id":"3dbfcb92-6ca6-509e-9bf2-33880e7442bf","excerpt":"Initializes an array containing the numbers in the specified range where  and  are inclusive and the ratio between two terms is .\nReturns an error if  equals…","html":"<p>Initializes an array containing the numbers in the specified range where <code class=\"language-text\">start</code> and <code class=\"language-text\">end</code> are inclusive and the ratio between two terms is <code class=\"language-text\">step</code>.\nReturns an error if <code class=\"language-text\">step</code> equals <code class=\"language-text\">1</code>.</p>\n<p>Use <code class=\"language-text\">Array.from()</code>, <code class=\"language-text\">Math.log()</code> and <code class=\"language-text\">Math.floor()</code> to create an array of the desired length, <code class=\"language-text\">Array.prototype.map()</code> to fill with the desired values in a range.\nOmit the second argument, <code class=\"language-text\">start</code>, to use a default value of <code class=\"language-text\">1</code>.\nOmit the third argument, <code class=\"language-text\">step</code>, to use a default value of <code class=\"language-text\">2</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">geometricProgression</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">end<span class=\"token punctuation\">,</span> start <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> step <span class=\"token operator\">=</span> <span class=\"token number\">2</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> length<span class=\"token operator\">:</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>end <span class=\"token operator\">/</span> start<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>step<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">v<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> start <span class=\"token operator\">*</span> step <span class=\"token operator\">**</span> i\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token function\">geometricProgression</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1, 2, 4, 8, 16, 32, 64, 128, 256]</span>\n<span class=\"token function\">geometricProgression</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [3, 6, 12, 24, 48, 96, 192]</span>\n<span class=\"token function\">geometricProgression</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1, 4, 16, 64, 256]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p><a href=\"http://github.com/30-seconds/\">Acesse a Referência original</a></p>","frontmatter":{"title":"como usar o geometricProgression no javascript es6","date":"January 04, 2020","description":""}}},"pageContext":{"slug":"/javascript-como-fazer-geometricProgression/","previous":{"fields":{"slug":"/javascript-como-fazer-getColonTimeFromDate/"},"frontmatter":{"title":"como usar o getColonTimeFromDate no javascript es6"}},"next":{"fields":{"slug":"/javascript-como-fazer-gcd/"},"frontmatter":{"title":"como usar o gcd no javascript es6"}}}},"staticQueryHashes":["1061827086","63159454"]}