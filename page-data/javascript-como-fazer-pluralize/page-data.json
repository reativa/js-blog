{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript-como-fazer-pluralize/","result":{"data":{"site":{"siteMetadata":{"title":"JS para impacientes"}},"markdownRemark":{"id":"604e8e89-98c1-58b2-affd-ed7e39693dd2","excerpt":"Returns the singular or plural form of the word based on the input number. If the first argument is an , it will use a closure by returning a function that can…","html":"<p>Returns the singular or plural form of the word based on the input number. If the first argument is an <code class=\"language-text\">object</code>, it will use a closure by returning a function that can auto-pluralize words that don’t simply end in <code class=\"language-text\">s</code> if the supplied dictionary contains the word.</p>\n<p>If <code class=\"language-text\">num</code> is either <code class=\"language-text\">-1</code> or <code class=\"language-text\">1</code>, return the singular form of the word. If <code class=\"language-text\">num</code> is any other number, return the plural form. Omit the third argument to use the default of the singular word + <code class=\"language-text\">s</code>, or supply a custom pluralized word when necessary. If the first argument is an <code class=\"language-text\">object</code>, utilize a closure by returning a function which can use the supplied dictionary to resolve the correct plural form of the word.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> pluralize <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">,</span> word<span class=\"token punctuation\">,</span> plural <span class=\"token operator\">=</span> word <span class=\"token operator\">+</span> <span class=\"token string\">'s'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> _pluralize <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span> word<span class=\"token punctuation\">,</span> plural <span class=\"token operator\">=</span> word <span class=\"token operator\">+</span> <span class=\"token string\">'s'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> word <span class=\"token operator\">:</span> plural<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> val <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">num<span class=\"token punctuation\">,</span> word</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">_pluralize</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span> word<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">[</span>word<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">_pluralize</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">,</span> word<span class=\"token punctuation\">,</span> plural<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token function\">pluralize</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'apple'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'apples'</span>\n<span class=\"token function\">pluralize</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'apple'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'apple'</span>\n<span class=\"token function\">pluralize</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'apple'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'apples'</span>\n<span class=\"token function\">pluralize</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'person'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'people'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'people'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">PLURALS</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  person<span class=\"token operator\">:</span> <span class=\"token string\">'people'</span><span class=\"token punctuation\">,</span>\n  radius<span class=\"token operator\">:</span> <span class=\"token string\">'radii'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> autoPluralize <span class=\"token operator\">=</span> <span class=\"token function\">pluralize</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PLURALS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">autoPluralize</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'person'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'people'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><a href=\"http://github.com/30-seconds/\">Acesse a Referência original</a></p>","frontmatter":{"title":"como usar o pluralize no javascript es6","date":"January 04, 2020","description":""}}},"pageContext":{"slug":"/javascript-como-fazer-pluralize/","previous":{"fields":{"slug":"/javascript-como-fazer-powerset/"},"frontmatter":{"title":"como usar o powerset no javascript es6"}},"next":{"fields":{"slug":"/javascript-como-fazer-pipeAsyncFunctions/"},"frontmatter":{"title":"como usar o pipeAsyncFunctions no javascript es6"}}}},"staticQueryHashes":["1061827086","63159454"]}